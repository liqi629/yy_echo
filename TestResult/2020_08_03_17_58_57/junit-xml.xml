<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="2" hostname="LAPTOP-G3GAB2EO" name="pytest" skipped="0" tests="13" time="175.526" timestamp="2020-08-03T17:58:58.133659"><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="29" name="test_add_operation_system" time="16.791"><failure message="AssertionError: assert &apos;应用编码已存在,请输入新编码&apos; == &apos;保存成功!&apos;
  - 保存成功!
  + 应用编码已存在,请输入新编码">self = &lt;TestCases.user_story.test_2_story_one.TestUserStoryOne object at 0x000001FEAB8F50B8&gt;
browser = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;fdb9d70ecce945302a4392237365f739&quot;)&gt;

    def test_add_operation_system(self, browser):
        &quot;&quot;&quot;
        名称：添加应用
        前置：登录系统
        步骤：
        1、点击资源管理展开菜单
        2、点击应用管理
        3、点击添加，输入应用信息
        4、点击确定
        检查点：
        * 检查页面弹出的提示信息。
        &quot;&quot;&quot;
        hp(browser).add_operation_system(os[&quot;zh_name&quot;], os[&quot;code&quot;], os[&quot;short_zn_name&quot;],
                                         os[&quot;en_name&quot;], os[&quot;short_en_name&quot;], os[&quot;sys_remark&quot;],
                                         os[&quot;sys_version&quot;], os[&quot;dept&quot;], os[&quot;contacter&quot;],
                                         os[&quot;mobile&quot;], os[&quot;email&quot;])
        msg = hp(browser).get_text(hp_loc.toast_msg)
&gt;       assert msg == &apos;保存成功!&apos;
E       AssertionError: assert &apos;应用编码已存在,请输入新编码&apos; == &apos;保存成功!&apos;
E         - 保存成功!
E         + 应用编码已存在,请输入新编码

TestCases\user_story\test_2_story_one.py:47: AssertionError</failure></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="48" name="test_add_work_dir" time="5.027"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="62" name="test_add_map" time="18.506"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="78" name="test_add_datanode[data0]" time="25.527"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="78" name="test_add_datanode[data1]" time="26.034"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="99" name="test_pub_map" time="11.976"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="111" name="test_create_work_flow" time="4.347"><failure message="AssertionError: assert &apos;mysql_qc_city1596448738&apos; == &apos;mysql_qc_city&apos;
  - mysql_qc_city
  + mysql_qc_city1596448738">self = &lt;TestCases.user_story.test_2_story_one.TestUserStoryOne object at 0x000001FEABA7F7B8&gt;
browser = &lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;fdb9d70ecce945302a4392237365f739&quot;)&gt;

    def test_create_work_flow(self, browser):
        &quot;&quot;&quot;
        名称：快速生成工作流
        步骤：
        1、选择作业，点击快速生成工作流
        2、输入名称和描述信息
        3、点击确定
        4、切换到设计器页面，刷新
        检查点：
        * 检查页面是否有作业。
        * 检查页面是否有工作流。
        &quot;&quot;&quot;
        dp(browser).cre_work_flow(sd.work_flow_name, &quot;自动化测试：工作流的描述&quot;)
    
        msg = dp(browser).get_text(dp_loc.text_to_loc(sd.work_flow_name))
        msg_1 = dp(browser).get_text(dp_loc.text_to_loc(sd.map_name))
    
&gt;       assert msg == &apos;mysql_qc_city&apos;
E       AssertionError: assert &apos;mysql_qc_city1596448738&apos; == &apos;mysql_qc_city&apos;
E         - mysql_qc_city
E         + mysql_qc_city1596448738

TestCases\user_story\test_2_story_one.py:129: AssertionError</failure></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="131" name="test_pilt_run" time="18.704"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="151" name="test_del_work_flow" time="12.499"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="165" name="test_del_job" time="12.379"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="179" name="test_del_map" time="10.167"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="195" name="test_del_work_dir" time="3.436"></testcase><testcase classname="TestCases.user_story.test_2_story_one.TestUserStoryOne" file="TestCases\user_story\test_2_story_one.py" line="211" name="test_delete_operation_system" time="9.089"></testcase></testsuite></testsuites>